<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerenciamento de Clientes</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
        }
        h1, h2 {
            color: #333;
        }
        form {
            background-color: #fff;
            margin: 20px;
            padding: 20px;
            border-radius: 5px;
        }
        label {
            display: block;
            margin-block-end: 10px;
        }
        input[type="text"], input[type="number"] {
            inline-size: 100%;
            padding: 10px;
            margin-block-end: 20px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }
        input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 15px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
        table {
            inline-size: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        table, th, td {
            border: 1px solid #ccc;
        }
        th, td {
            padding: 10px;
            text-align: start;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    
    <h1>Gerenciamento de Clientes</h1>

    <h2>Lista de Clientes</h2>
    <table id="clientsTable">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nome</th>
                <th>Endereço</th>
                <th>Telefone</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            <!-- Os clientes serão inseridos aqui -->
        </tbody>
    </table>

    <h2>Remover Cliente</h2>
    <form id="removeClientForm">
        <label for="ID">ID do Cliente:</label>
        <input type="number" id="ID" name="ID">
        <input type="submit" value="Remover Cliente">
    </form>

    <h2>Atualizar Cliente</h2>
    <form id="fetchClientForm">
        <label for="updateID">ID do Cliente:</label>
        <input type="number" id="updateID" name="updateID">
        <input type="submit" value="Buscar Cliente">
    </form>

    <form id="updateClientForm" style="display:none;">
        <label for="updateNome">Nome:</label>
        <input type="text" id="updateNome" name="Nome">
        <label for="updateEndereco">Endereço:</label>
        <input type="text" id="updateEndereco" name="Endereco">
        <label for="updateTelefone">Telefone:</label>
        <input type="text" id="updateTelefone" name="Telefone">
        <label for="updateEmail">Email:</label>
        <input type="text" id="updateEmail" name="Email">
        <input type="submit" value="Atualizar Cliente">
    </form>

    <h2>Buscar Pedidos por Cliente ID</h2>
    <form id="fetchOrdersForm">
        <label for="searchClienteID">ID do Cliente:</label>
        <input type="number" id="searchClienteID" name="searchClienteID">
        <input type="submit" value="Buscar Pedidos">
    </form>

    <h2>Lista de Pedidos do Cliente</h2>
    <table id="ordersTable" style="display:none;">
        <thead>
            <tr>
                <th>ID</th>
                <th>ClienteID</th>
                <th>Data do Pedido</th>
                <th>Status do Pedido</th>
            </tr>
        </thead>
        <tbody>
            <!-- Os pedidos serão inseridos aqui -->
        </tbody>
    </table>

    <script>
        document.getElementById('removeClientForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData.entries());
            fetch('/removeClient', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.text())
            .then(data => {
                alert(data);
                loadClients();
            })
            .catch(error => console.error('Erro:', error));
        });

        document.getElementById('fetchClientForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const clientID = document.getElementById('updateID').value;
            fetch(`/getClient/${clientID}`)
                .then(response => response.json())
                .then(client => {
                    document.getElementById('updateNome').value = client.Nome;
                    document.getElementById('updateEndereco').value = client.Endereco;
                    document.getElementById('updateTelefone').value = client.Telefone;
                    document.getElementById('updateEmail').value = client.Email;
                    document.getElementById('updateClientForm').style.display = 'block';
                })
                .catch(error => console.error('Erro:', error));
        });

        document.getElementById('updateClientForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData.entries());
            const clientID = document.getElementById('updateID').value;
            fetch(`/updateClient/${clientID}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.text())
            .then(data => {
                alert(data);
                loadClients();
                document.getElementById('updateClientForm').style.display = 'none';
            })
            .catch(error => console.error('Erro:', error));
        });

        document.getElementById('fetchOrdersForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const clienteID = document.getElementById('searchClienteID').value;
            fetch(`/getOrders/${clienteID}`)
                .then(response => response.json())
                .then(orders => {
                    const ordersTableBody = document.querySelector('#ordersTable tbody');
                    ordersTableBody.innerHTML = '';
                    orders.forEach(order => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${order.ID}</td>
                            <td>${order.ClienteID}</td>
                            <td>${order.DataPedido}</td>
                            <td>${order.StatusPedido}</td>
                        `;
                        ordersTableBody.appendChild(row);
                    });
                    document.getElementById('ordersTable').style.display = 'block';
                })
                .catch(error => console.error('Erro:', error));
        });

        function loadClients() {
            fetch('/listClients')
                .then(response => response.json())
                .then(clients => {
                    const clientsTableBody = document.querySelector('#clientsTable tbody');
                    clientsTableBody.innerHTML = '';
                    clients.forEach(client => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${client.ID}</td>
                            <td>${client.Nome}</td>
                            <td>${client.Endereco}</td>
                            <td>${client.Telefone}</td>
                            <td>${client.Email}</td>
                        `;
                        clientsTableBody.appendChild(row);
                    });
                })
                .catch(error => console.error('Erro:', error));
        }

        // Carregar os clientes ao carregar a página
        document.addEventListener('DOMContentLoaded', loadClients);
    </script>
</body>
</html>
