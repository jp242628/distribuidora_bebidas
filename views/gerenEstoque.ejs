<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerenciamento de Estoque</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
        }
        h1, h2 {
            color: #333;
        }
        form {
            background-color: #fff;
            margin: 20px;
            padding: 20px;
            border-radius: 5px;
        }
        label {
            display: block;
            margin-block-end: 10px;
        }
        input[type="text"], input[type="number"], input[type="date"], select {
            inline-size: 100%;
            padding: 10px;
            margin-block-end: 20px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }
        input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 15px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
        table {
            inline-size: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        table, th, td {
            border: 1px solid #ccc;
        }
        th, td {
            padding: 10px;
            text-align: start;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    
    <h1>Gerenciamento de Estoque</h1>

    <h2>Lista de Estoque</h2>
    <table id="stockTable">
        <thead>
            <tr>
                <th>ID</th>
                <th>Produto</th>
                <th>Data Movimentação</th>
                <th>Quantidade</th>
                <th>Tipo</th>
                <th>Descrição</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            <!-- Os registros de estoque serão inseridos aqui -->
        </tbody>
    </table>

    <h2>Atualizar Registro de Estoque</h2>
    <form id="fetchStockForm">
        <label for="updateEstoqueID">ID do Registro de Estoque:</label>
        <input type="number" id="updateEstoqueID" name="updateEstoqueID">
        <input type="submit" value="Buscar Registro de Estoque">
    </form>

    <form id="updateStockForm" style="display:none;">
        <label for="updateDataMovimentacao">Data Movimentação:</label>
        <input type="date" id="updateDataMovimentacao" name="DataMovimentacao">
        <label for="updateQuantidade">Quantidade:</label>
        <input type="number" id="updateQuantidade" name="Quantidade">
        <label for="updateTipo">Tipo:</label>
        <select id="updateTipo" name="Tipo">
            <option value="entrada">Entrada</option>
            <option value="saída">Saída</option>
        </select>
        <label for="updateDescricao">Descrição:</label>
        <input type="text" id="updateDescricao" name="Descricao">
        <input type="submit" value="Atualizar Registro de Estoque">
    </form>

    <h2>Adicionar Registro de Estoque</h2>
    <form id="addStockForm">
        <label for="addProdutoID">ID do Produto:</label>
        <input type="number" id="addProdutoID" name="ProdutoID">
        <label for="addDataMovimentacao">Data Movimentação:</label>
        <input type="date" id="addDataMovimentacao" name="DataMovimentacao">
        <label for="addQuantidade">Quantidade:</label>
        <input type="number" id="addQuantidade" name="Quantidade">
        <label for="addTipo">Tipo:</label>
        <select id="addTipo" name="Tipo">
            <option value="entrada">Entrada</option>
            <option value="saída">Saída</option>
        </select>
        <label for="addDescricao">Descrição:</label>
        <input type="text" id="addDescricao" name="Descricao">
        <input type="submit" value="Adicionar Registro de Estoque">
    </form>

    <h2>Remover Registro de Estoque</h2>
    <form id="removeStockForm">
        <label for="removeEstoqueID">ID do Registro de Estoque:</label>
        <input type="number" id="removeEstoqueID" name="removeEstoqueID">
        <input type="submit" value="Remover Registro de Estoque">
    </form>

    <h2>Detalhes do Produto</h2>
    <div id="productDetails">
        <!-- Detalhes do produto serão inseridos aqui -->
    </div>

    <script>
        // Função para carregar os registros de estoque ao carregar a página
        function loadStock() {
            fetch('/listStock')
                .then(response => response.json())
                .then(stock => {
                    const stockTableBody = document.querySelector('#stockTable tbody');
                    stockTableBody.innerHTML = '';
                    stock.forEach(item => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${item.ID}</td>
                            <td>${item.Nome}</td>
                            <td>${item.DataMovimentacao}</td>
                            <td>${item.Quantidade}</td>
                            <td>${item.Tipo}</td>
                            <td>${item.Descricao}</td>
                            <td>
                                <button onclick="fetchStockDetails(${item.ProdutoID})">Detalhes do Produto</button>
                            </td>
                        `;
                        stockTableBody.appendChild(row);
                    });
                })
                .catch(error => console.error('Erro:', error));
        }

        // Função para buscar e preencher os detalhes do produto
        function fetchStockDetails(produtoID) {
            fetch(`/getProductStock/${produtoID}`)
                .then(response => response.json())
                .then(data => {
                    const productDetailsDiv = document.getElementById('productDetails');
                    productDetailsDiv.innerHTML = `
                        <h3>Detalhes do Produto</h3>
                        <p><strong>ID do Produto:</strong> ${data[0].ID}</p>
                        <p><strong>Nome do Produto:</strong> ${data[0].Nome}</p>
                        <p><strong>Descrição:</strong> ${data[0].Descricao}</p>
                        <p><strong>Preço:</strong> ${data[0].Preco}</p>
                    `;
                })
                .catch(error => console.error('Erro:', error));
        }

        // Função para buscar um registro de estoque pelo ID e preencher o formulário de atualização
        document.getElementById('fetchStockForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const estoqueID = document.getElementById('updateEstoqueID').value;
            fetch(`/getStock/${estoqueID}`)
                .then(response => response.json())
                .then(data => {
                    const updateStockForm = document.getElementById('updateStockForm');
                    updateStockForm.style.display = 'block';
                    updateStockForm.querySelector('#updateDataMovimentacao').value = data[0].DataMovimentacao;
                    updateStockForm.querySelector('#updateQuantidade').value = data[0].Quantidade;
                    updateStockForm.querySelector('#updateTipo').value = data[0].Tipo;
                    updateStockForm.querySelector('#updateDescricao').value = data[0].Descricao;
                })
                .catch(error => console.error('Erro:', error));
        });
        // Função para atualizar um registro de estoque
        document.getElementById('updateStockForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const estoqueID = document.getElementById('updateEstoqueID').value;
            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData.entries());
            fetch(`/updateStock/${estoqueID}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.text())
            .then(data => {
                alert(data);
                loadStock();
                document.getElementById('updateStockForm').style.display = 'none';
            })
            .catch(error => console.error('Erro:', error));
        });

        // Função para adicionar um registro de estoque
        document.getElementById('addStockForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData.entries());
            fetch('/addStock', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.text())
            .then(data => {
                alert(data);
                loadStock();
            })
            .catch(error => console.error('Erro:', error));
        });

        // Função para remover um registro de estoque
        document.getElementById('removeStockForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const estoqueID = document.getElementById('removeEstoqueID').value;
            fetch(`/removeStock/${estoqueID}`, {
                method: 'POST'
            })
            .then(response => response.text())
            .then(data => {
                alert(data);
                loadStock();
            })
            .catch(error => console.error('Erro:', error));
        });

        // Carregar os registros de estoque ao carregar a página
        document.addEventListener('DOMContentLoaded', function () {
            loadStock();
        });
    </script>
</body>
</html>
