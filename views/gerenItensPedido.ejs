<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerenciamento de Itens de Pedido</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
        }
        h1, h2 {
            color: #333;
        }
        form {
            background-color: #fff;
            margin: 20px;
            padding: 20px;
            border-radius: 5px;
        }
        label {
            display: block;
            margin-bottom: 10px;
        }
        input[type="text"], input[type="number"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }
        input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 15px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        table, th, td {
            border: 1px solid #ccc;
        }
        th, td {
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    
    <h1>Gerenciamento de Itens de Pedido</h1>

    <h2>Lista de Itens de Pedido</h2>
    <table id="orderItemsTable">
        <thead>
            <tr>
                <th>PedidoID</th>
                <th>ProdutoID</th>
                <th>Quantidade</th>
                <th>Preço Unitário</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            <!-- Os itens de pedido serão inseridos aqui -->
        </tbody>
    </table>

    <h2>Atualizar Item de Pedido</h2>
    <form id="fetchOrderItemForm">
        <label for="updatePedidoID">ID do Pedido:</label>
        <input type="number" id="updatePedidoID" name="updatePedidoID">
        <label for="updateProdutoID">ID do Produto:</label>
        <input type="number" id="updateProdutoID" name="updateProdutoID">
        <input type="submit" value="Buscar Item de Pedido">
    </form>

    <form id="updateOrderItemForm" style="display:none;">
        <label for="updateQuantidade">Quantidade:</label>
        <input type="number" id="updateQuantidade" name="Quantidade">
        <label for="updatePrecoUnitario">Preço Unitário:</label>
        <input type="number" step="0.01" id="updatePrecoUnitario" name="PrecoUnitario">
        <input type="submit" value="Atualizar Item de Pedido">
    </form>

    <h2>Remover Item de Pedido</h2>
    <form id="removeOrderItemForm">
        <label for="removePedidoID">ID do Pedido:</label>
        <input type="number" id="removePedidoID" name="removePedidoID">
        <label for="removeProdutoID">ID do Produto:</label>
        <input type="number" id="removeProdutoID" name="removeProdutoID">
        <input type="submit" value="Remover Item de Pedido">
    </form>

    <h2>Detalhes do Pedido</h2>
    <div id="orderDetails" style="margin-bottom: 20px;">
        <!-- Detalhes do pedido serão inseridos aqui -->
    </div>

    <h2>Detalhes do Produto</h2>
    <div id="productDetails">
        <!-- Detalhes do produto serão inseridos aqui -->
    </div>

    <h2>Adicionar Novo Item de Pedido</h2>
    <form id="addOrderItemForm">
        <label for="addPedidoID">ID do Pedido:</label>
        <input type="number" id="addPedidoID" name="PedidoID">
        <label for="addProdutoID">ID do Produto:</label>
        <input type="number" id="addProdutoID" name="ProdutoID">
        <label for="addQuantidade">Quantidade:</label>
        <input type="number" id="addQuantidade" name="Quantidade">
        <label for="addPrecoUnitario">Preço Unitário:</label>
        <input type="number" step="0.01" id="addPrecoUnitario" name="PrecoUnitario">
        <input type="submit" value="Adicionar Item de Pedido">
    </form>

    <script>
        document.getElementById('fetchOrderItemForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const pedidoID = document.getElementById('updatePedidoID').value;
            const produtoID = document.getElementById('updateProdutoID').value;
            fetch(`/getOrderItem/${pedidoID}/${produtoID}`)
                .then(response => response.json())
                .then(orderItem => {
                    document.getElementById('updateQuantidade').value = orderItem.Quantidade;
                    document.getElementById('updatePrecoUnitario').value = orderItem.PrecoUnitario;
                    document.getElementById('updateOrderItemForm').style.display = 'block';
                })
                .catch(error => console.error('Erro:', error));
        });

        document.getElementById('updateOrderItemForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData.entries());
            const pedidoID = document.getElementById('updatePedidoID').value;
            const produtoID = document.getElementById('updateProdutoID').value;
            fetch(`/updateOrderItem/${pedidoID}/${produtoID}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.text())
            .then(data => {
                alert(data);
                loadOrderItems();
                document.getElementById('updateOrderItemForm').style.display = 'none';
            })
            .catch(error => console.error('Erro:', error));
        });

        document.getElementById('removeOrderItemForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData.entries());
            const pedidoID = document.getElementById('removePedidoID').value;
            const produtoID = document.getElementById('removeProdutoID').value;
            fetch(`/removeOrderItem/${pedidoID}/${produtoID}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.text())
            .then(data => {
                alert(data);
                loadOrderItems();
            })
            .catch(error => console.error('Erro:', error));
        });

        function loadOrderItems() {
            fetch('/listOrderItems')
                .then(response => response.json())
                .then(orderItems => {
                    const orderItemsTableBody = document.querySelector('#orderItemsTable tbody');
                    orderItemsTableBody.innerHTML = '';
                    orderItems.forEach(orderItem => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${orderItem.PedidoID}</td>
                            <td>${orderItem.ProdutoID}</td>
                            <td>${orderItem.Quantidade}</td>
                            <td>${orderItem.PrecoUnitario}</td>
                            <td>
                                <button onclick="fetchOrderDetails(${orderItem.PedidoID})">Detalhes do Pedido</button>
                                <button onclick="fetchProductDetails(${orderItem.ProdutoID})">Detalhes do Produto</button>
                            </td>
                        `;
                        orderItemsTableBody.appendChild(row);
                    });
                })
                .catch(error => console.error('Erro:', error));
        }

        function fetchOrderDetails(pedidoID) {
            fetch(`/getOrder/${pedidoID}`)
                .then(response => response.json())
                .then(order => {
                    const orderDetails = document.getElementById('orderDetails');
                    orderDetails.innerHTML = `
                        <p><strong>ID do Pedido:</strong> ${order.ID}</p>
                        <p><strong>ID do Cliente:</strong> ${order.ClienteID}</p>
                        <p><strong>Data do Pedido:</strong> ${order.DataPedido}</p>
                        <p><strong>Status do Pedido:</strong> ${order.StatusPedido}</p>
                    `;
                })
                .catch(error => console.error('Erro:', error));
        }

        function fetchProductDetails(produtoID) {
    fetch(`/getProduct/${produtoID}`)
        .then(response => response.json())
        .then(product => {
            // Verifica se product não é um array vazio
            if (Array.isArray(product)) {
                product = product[0];
            }
            const productDetails = document.getElementById('productDetails');
            if (product && product.ID && product.Nome && product.Descricao && product.Preco) {
                productDetails.innerHTML = `
                    <p><strong>ID do Produto:</strong> ${product.ID}</p>
                    <p><strong>Nome do Produto:</strong> ${product.Nome}</p>
                    <p><strong>Descrição:</strong> ${product.Descricao}</p>
                    <p><strong>Preço:</strong> ${product.Preco}</p>
                `;
            } else {
                productDetails.innerHTML = '<p>Detalhes do produto não encontrados.</p>';
            }
        })
        .catch(error => console.error('Erro:', error));
}

            document.getElementById('addOrderItemForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const formData = new FormData(event.target);
        const data = Object.fromEntries(formData.entries());

        fetch('/addOrderItem', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        })
        .then(response => response.text())
        .then(data => {
            alert(data);
            loadOrderItems();
            document.getElementById('addOrderItemForm').reset(); // Limpar formulário após adicionar
        })
        .catch(error => console.error('Erro:', error));
    });

        function loadOrderItems() {
            fetch('/listOrderItems')
                .then(response => response.json())
                .then(orderItems => {
                    const orderItemsTableBody = document.querySelector('#orderItemsTable tbody');
                    orderItemsTableBody.innerHTML = '';
                    orderItems.forEach(orderItem => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${orderItem.PedidoID}</td>
                            <td>${orderItem.ProdutoID}</td>
                            <td>${orderItem.Quantidade}</td>
                            <td>${orderItem.PrecoUnitario}</td>
                            <td>
                                <button onclick="fetchOrderDetails(${orderItem.PedidoID})">Detalhes do Pedido</button>
                                <button onclick="fetchProductDetails(${orderItem.ProdutoID})">Detalhes do Produto</button>
                            </td>
                        `;
                        orderItemsTableBody.appendChild(row);
                    });
                })
                .catch(error => console.error('Erro:', error));
        }

        // Carregar os itens de pedido ao carregar a página
        document.addEventListener('DOMContentLoaded', function () {
            loadOrderItems();
        });
    </script>
</body>
</html>
